@addTagHelper *, BlazorStrap
@page "/Randomize"
@using FF1Lib

<div>
	<div><input type="text" class="form-control" value="@Flags.EncodeFlagsText(MyFlags.Flags)"/></div>
	<br/>
	<BlazorNav IsTabs>
		<BlazorNavLink onclick="@ActivateShuffle" IsActive="@(activeTab == "Shuffle")">Shuffle</BlazorNavLink>
		<BlazorNavLink onclick="@ActivateTreasures" IsActive="@(activeTab == "Treasures")">Treasures</BlazorNavLink>
	</BlazorNav>
	<TabContent>
		<TabPane IsOpen="@(activeTab == "Shuffle")">
			<div class="container">
				<div class="row">
					<div class="col-4">
						<CheckBox Id="shopsCheckBox" bind-Value="@MyFlags.Shops">Shops</CheckBox>
						<CheckBox Indent IsEnabled="@MyFlags.Shops" Id="randomWaresCheckBox" bind-Value="@MyFlags.RandomWares">Random Weapons and Armor</CheckBox>
						<CheckBox Id="magicShopsCheckBox" bind-Value="@MyFlags.MagicShops">Magic Shops</CheckBox>
						<CheckBox Id="magicLevelsCheckBox" bind-Value="@MyFlags.MagicLevels">Magic Levels</CheckBox>
						<CheckBox Indent IsEnabled="@MyFlags.MagicLevels" Id="magicPermissionsCheckBox" bind-Value="@MyFlags.MagicPermissions">Keep Permissions</CheckBox>
						<CheckBox Id="itemMagicCheckBox" bind-Value="@MyFlags.ItemMagic">Item Magic</CheckBox>
						<div class="checkbox-cell"></div>
						<CheckBox Id="rngCheckBox" bind-Value="@MyFlags.Rng">RNG Table</CheckBox>
					</div>
					<div class="col-4">
						<CheckBox Id="enemyScriptsCheckBox" bind-Value="@MyFlags.EnemyScripts">Enemy Scripts</CheckBox>
						<CheckBox Indent IsEnabled="@MyFlags.EnemyScripts" Id="allowUnsafePiratesCheckBox" bind-Value="@MyFlags.AllowUnsafePirates">Allow Unsafe Pirates</CheckBox>
						<CheckBox Id="enemySkillsSpellsCheckBox" bind-Value="@MyFlags.EnemySkillsSpells">Enemy Skills/Spells</CheckBox>
						<CheckBox Id="enemyStatusAttacksCheckBox" bind-Value="@MyFlags.EnemyStatusAttacks">Enemy Status Attacks</CheckBox>
						<CheckBox Id="enemyFormationsUnrunnableCheckBox" bind-Value="@MyFlags.EnemyFormationsUnrunnable">Enemy Unrunnable Formations</CheckBox>
						<CheckBox Id="enemyFormationsSurpriseCheckBox" bind-Value="@MyFlags.EnemyFormationsSurprise">Enemy Surprise Bonus</CheckBox>
						<div class="checkbox-cell">Formation Shuffle Mode</div>
						<CheckBox Id="enemyTrapTilesCheckBox" bind-Value="@MyFlags.EnemyTrapTiles">Enemy Forced Encounter Tiles</CheckBox>
						<CheckBox Id="randomTrapFormationsCheckBox" bind-Value="@MyFlags.RandomTrapFormations">Use Random Formations</CheckBox>
					</div>
				</div>
			</div>
		</TabPane>
		<TabPane IsOpen="@(activeTab == "Treasures")">
		</TabPane>
	</TabContent>
</div>

@functions
{
	private ViewModelFlags MyFlags { get; set; } = new ViewModelFlags();

	private string activeTab = "Shuffle";

	void ActivateShuffle(UIMouseEventArgs e)
	{
		activeTab = "Shuffle";
		StateHasChanged();
	}

	void ActivateTreasures(UIMouseEventArgs e)
	{
		activeTab = "Treasures";
		StateHasChanged();
	}

	protected override void OnInit()
	{
		MyFlags.PropertyChanged += (sender, args) => StateHasChanged();
	}

}
